type Comment {
  content: String!
  id: ID!
  todo: Todo!
  user: User!
}

"""
Autogenerated input type of CreateComment
"""
input CreateCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  todoId: ID!
}

"""
Autogenerated input type of CreateTodo
"""
input CreateTodoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  title: String!
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  passwordConfirmation: String!
}

"""
Autogenerated return type of CreateUser.
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""
Autogenerated input type of DeleteComment
"""
input DeleteCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated input type of DeleteTodo
"""
input DeleteTodoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
Autogenerated input type of LoginUser
"""
input LoginUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of LoginUser.
"""
type LoginUserPayload {
  clientId: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  token: String
  uid: String
  user: User
}

"""
Autogenerated input type of LogoutUser
"""
input LogoutUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of LogoutUser.
"""
type LogoutUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean!
}

type Mutation {
  createComment(
    """
    Parameters for CreateComment
    """
    input: CreateCommentInput!
  ): Comment
  createTodo(
    """
    Parameters for CreateTodo
    """
    input: CreateTodoInput!
  ): Todo
  createUser(
    """
    Parameters for CreateUser
    """
    input: CreateUserInput!
  ): CreateUserPayload
  deleteComment(
    """
    Parameters for DeleteComment
    """
    input: DeleteCommentInput!
  ): Comment
  deleteTodo(
    """
    Parameters for DeleteTodo
    """
    input: DeleteTodoInput!
  ): Todo
  loginUser(
    """
    Parameters for LoginUser
    """
    input: LoginUserInput!
  ): LoginUserPayload
  logoutUser(
    """
    Parameters for LogoutUser
    """
    input: LogoutUserInput!
  ): LogoutUserPayload
  updateComment(
    """
    Parameters for UpdateComment
    """
    input: UpdateCommentInput!
  ): Comment
  updateTodo(
    """
    Parameters for UpdateTodo
    """
    input: UpdateTodoInput!
  ): Todo
}

type Query {
  comment: Comment!
  comments: [Comment!]!
  me: User!
  todo(id: ID!): Todo!
  todos: [Todo!]!
  user(id: ID!): User!
  users: [User!]!
}

type Todo {
  comments: [Comment!]!
  description: String
  id: ID!
  title: String!
  user: User!
}

"""
Autogenerated input type of UpdateComment
"""
input UpdateCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  content: String!
  id: ID!
}

"""
Autogenerated input type of UpdateTodo
"""
input UpdateTodoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
  title: String
}

type User {
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  name: String
  tokens: String
  updatedAt: ISO8601DateTime!
}
